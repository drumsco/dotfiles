if has('win32')
    set guifont=Consolas:h10
    set guifontwide=MS_Gothic
endif

if has('gui_macvim')
    let macvim_skip_colorscheme=1
endif
if g:has_plugin('molokai-customized')
    "let g:rehash256 = 1
    set background=dark
    colorscheme molokai-customized
" if g:has_plugin('solarized')
"      set background=dark
"      " set background=light
"      let g:solarized_degrade = 1
"      let g:solarized_contrast = "high"
"      let g:solarized_visibility = "high"
"      colorscheme solarized
else
    colorscheme default
endif

set guioptions&
" ツールバーを削除
set guioptions-=T
" メニューを削除
set guioptions-=m
" 右スクロールバーを非表示
set guioptions-=r
" 左スクロールバーを非表示
set guioptions-=L
" guitablabelを使わない
set guioptions-=e
" 'a'に似ているが、コマンドラインで選択したときか、CTRL+SHIFTを押しながらマウスで選択したときに共有のクリップボードを使用する。
" Ctrl+Shiftでステータスラインの文字列もクリップボードに保存できる
set guioptions+=A
" ポップアップダイアログではなく、コンソールダイアログを使う
" set guioptions+=c

" Windowsのgvimのメニューの文字化け対応
" source $VIMRUNTIME/delmenu.vim
" source $VIMRUNTIME/menu.vim

" Alt+でメニューをフォーカスしない
set winaltkeys=no
" Alt+Spaceでウィンドウのシステムメニュー
nnoremap <silent> <M-Space> :<C-u>simalt ~<CR>

"---------------------------------------------------------------------------
" 日本語入力に関する設定:
"
if has('multi_byte_ime') || has('xim')
  " IME ON時のカーソルの色を設定(設定例:紫)
  highlight CursorIM guibg=Red guifg=NONE
  " 挿入モード・検索モードでのデフォルトのIME状態設定
  set iminsert=0 imsearch=0
  if has('xim') && has('GUI_GTK')
    " XIMの入力開始キーを設定:
    " 下記の s-space はShift+Spaceの意味でkinput2+canna用設定
    "set imactivatekey=s-space
  endif
  " 挿入モードでのIME状態を記憶させない場合、次行のコメントを解除
  "inoremap <silent> <ESC> <ESC>:set iminsert=0<CR>
endif

inoremap <M-v> <C-o>:set paste<CR><C-r>*<C-o>:set nopaste<CR>
cnoremap <M-v> <C-r>*
xnoremap <M-c> "*y
nnoremap <M-a> ggVG

" mouse {{{
" ==============================================================================
" Show popup menu if right click.
set mousemodel=popup

" Don't focus the window when the mouse pointer is moved.
set nomousefocus
" Hide mouse pointer on insert mode.
set nomousehide
" }}}

" ウィンドウの位置とサイズを記憶する {{{
" ==============================================================================
" http://vim-users.jp/2010/01/hack120/
let g:save_window_file = $VIMFILES.'/.vimwinpos'

autocmd MyVimrc VimLeavePre * call s:save_window()

function! s:save_window()
    let options = [
      \ 'set columns=' . &columns,
      \ 'set lines=' . &lines,
      \ 'winpos ' . getwinposx() . ' ' . getwinposy(),
      \ ]
    call writefile(options, g:save_window_file)
endfunction

" もともとのコードだとgvimrcをロードするたびに前回のウィンドウの状態に戻るので
" VimEnterで設定する
autocmd MyVimrc VimEnter *
    \   if filereadable(g:save_window_file)
    \|      execute 'source' g:save_window_file
    \|  endif
" }}}

if has('gui_macvim')
    " GUIのMacVimで起動時のエラーメッセージがでないため、autocmdで出す
    " ※ mvimを使ってコンソール上から起動した時は、コンソール上にエラーメッセージがでる
    autocmd MyVimrc VimEnter * messages

    " GUIのMacVimでsudoを使うための設定
    " http://sanrinsha.lolipop.jp/blog/2014/03/gui_macvim_sudo.html
    let $SUDO_ASKPASS="/Applications/MacVim.app/Contents/MacOS/macvim-askpass"
    let $DISPLAY=":0"
endif
