# bash, zsh共通設定

#export PAGER=/usr/local/share/vim/vim73/macros/less.sh
#export PAGER=less
# lessで色つきの表示に対応させる
#export LESS='-R'
#export LESS='-M'
#export LESSOPEN="| /usr/bin/lesspipe.sh %s"
#export LESSCLOSE="/usr/bin/lesspipe.sh %s %s"

# .zashenvに設定するとDirDiff.vimでのLANG設定(https://github.com/tmsanrinsha/DirDiff.vim/commit/84f11927ae9a915cd7a0d330a1abba26a9982e32)を上書きしてしまうのでここに書く
export LANG='ja_JP.UTF-8'
# alias {{{
# ============================================================================
# すでにあるコマンドと同名のaliasの設定はここに書いて、
# shell scriptなどでaliasが実行されないようにする
if ls --version | grep GNU 1>/dev/null 2>&1; then
    alias ls='ls --color=auto'
    if [ -f ~/.config/dircolors ]; then
        if type dircolors > /dev/null 2>&1; then
            eval $(dircolors ~/.config/dircolors)
        elif type gdircolors > /dev/null 2>&1; then
            eval $(gdircolors ~/.config/dircolors)
        fi
    fi
else
    export LSCOLORS=exfxcxdxbxegedabagacad
    alias ls='ls -G'
fi
alias cp='cp -ip'
alias mv='mv -i'
if command_exists rmtrash; then
    alias rm=rmtrash
fi
alias diff='diff -u'

# http://sanrinsha.lolipop.jp/blog/2012/05/su%E3%83%BBsudo.html
alias sudo='sudo '

if grep --help 2>&1 | grep color 1>/dev/null 2>&1; then
    alias grep='grep --color=auto'
fi
# }}}
# PATHの設定 {{{1
# ------------------------------------------------------------------------------
# CentOS 6.3の/etc/profileにあるPATHを追加する関数
pathmunge () {
    case ":${PATH}:" in
        *:"$1":*)
            ;;
        *)
            if [ "$2" = "after" ] ; then
                PATH=$PATH:$1
            else
                PATH=$1:$PATH
            fi
    esac
}

# 実行ファイルがあるディレクトリに再帰的にPATHを通す
pathmungeR () {
    if [ -d $1 ]; then
        for i in `find -L $1 -type d \( -name .git -o -name .svn -o -name .hg \) -prune -o -type f -perm -u+x -exec dirname {} \; | uniq`
        do
            pathmunge $i $2
        done
    fi
}

# if [ -d ~/vim ];then
#     pathmunge ~/vim/`ls ~/vim | tail -n1`/bin
# fi

if [[ `uname` = Darwin ]]; then
    # homebrewでインストールしたものを優先
    # .zashenvで設定するとvimのpythonの参照先がhomebrewでインストールしたものになり
    # エラーが出るのでここで設定
    export PATH=/usr/local/bin:$PATH
    # さらに自分でビルドしたものを優先
    export PATH=$HOME/local/bin:$PATH
fi

# Man {{{1
# ============================================================================
# manのpagerとしてvimの:Manを使う。
# http://vim.wikia.com/wiki/Using_vim_as_a_man-page_viewer_under_Unix
# cygwinだとcolがなかったので使わない
if [[ `uname` != CYGWIN* ]]; then
    export PAGER="/bin/sh -c \"unset PAGER;col -b -x | \
        $EDITOR -c 'setlocal ft=man nonumber nomod nomodifiable nolist' -c 'noremap q :q<CR>' \
        -c 'map <SPACE> <C-D>' -c 'map b <C-U>' \
        -c 'nmap K :Man <C-R>=expand(\\\"<cword>\\\")<CR><CR>' -\""
fi
# man manでman以外出たり、lessになったりする
# function man() {
#     vim -c 'Ref man '$1 -c 'winc j' -c 'q'
# }

# screen {{{1
# ============================================================================
# test -z $STYでscreenの中にいるか確認できる

#screenがインストールされていて、Screenを起動していないときは自動起動
#ただし、.screenrcでterm xterm-256colorと設定しているとする
#if [ $TERM != 'xterm-256color' ];then 
#    # すでに screen セッションがある場合そこに接続し、なければ作成する
#    # screenがないときのエラーは/dev/nullに送る
#    screen -RU 2>/dev/null
#    # screen -rx || screen -D -RR
#fi
# }}}
# tmux {{{
# ============================================================================
# test -z $TMUXでTMUXの中にいるか確認できる

# tmでtmuxのセッションがなければ作り、あったらそこにアタッチする
# -2は256色のためのオプション
# macではクリップボードにアクセスできるようにreattach-to-user-namespaceを使う
#
# e.g.
# https://gist.github.com/1462391
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# http://yonchu.hatenablog.com/entry/20120514/1337026014
function tm {
    # tmuxの中でもscreenの中でもない場合
    if tmux has-session >/dev/null 2>&1; then
        #  セッションがあるならそこにアタッチ
        tmux -2 attach
    else
        # Macでコピーできるようにする
        if [[ $OSTYPE == darwin* ]] && ! hash reattach-to-user-namespace 2>/dev/null; then
            # on OS X force tmux's default command to spawn a shell in the user's namespace
            tmux_config='set-option -g default-command "reattach-to-user-namespace -l $SHELL"'
            # reattach-to-user-namespaceを設定するとcopy-modeでクリップボードコピーをしなくなるのでcopy-pipeする
            tmux_config="\n"'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'
        fi

        tmux_config=$(cat $HOME/.tmux.conf)"
        $tmux_config
        # シェルのプロンプトをさかのぼる
        bind @ copy-mode \; send-keys ? C-u "$(whoami)": C-m n
        "
        tmux -2 -f <(echo "$tmux_config") new-session
    fi
}
# }}}

if [ $SHLVL -eq 1 ]; then # tmux, screenを起動していないとき
    # 回線が切られた時にlogoutする。.bash_logout等を実行するための設定
    trap logout HUP
fi

# VVM {{{
test -f ~/.vvm/etc/login && source ~/.vvm/etc/login
# }}}
# svn {{{
alias svnvd='svn diff --diff-cmd ~/bin/svn_diff_vim'
# }}}
# perl {{{
# ==============================================================================
# perlモジュールの一覧表示。@INCから.（カレントディレクトリ）は取り除く
alias pl="find `perl -e 'print "@INC"' | sed -e 's/ .$//'` -type f -name \"*.pm\""
#}}}
# gisty {{{
export GISTY_DIR="$HOME/gists"
export GISTY_SSL_VERIFY="NONE"
# }}}
# nvm {{{
# http://sanrinsha.lolipop.jp/blog/2012/03/node-jsnvm.html
if [ -f ~/.nvm/nvm.sh ]; then
    # nvm.shにnvm用のMANPATHを追加する部分があるが
    # MANPATHはデフォルトだと空なので
    # MANPATH="$NVM_DIR/$2/share/man:$MANPATH"
    # だとnvmのマニュアルへのPATHのみになってしまうので
    # 予めセットしておく
    export MANPATH=`manpath`

    . ~/.nvm/nvm.sh
    nvm alias default v0.6.11 > /dev/null
fi
# }}}

# if [[ `hostname` == *ua.sakura.ne.jp ]]; then
#     export PACKAGESITE=ftp://ftp.jp.freebsd.org/pub/FreeBSD/ports/amd64/packages-8-stable/Latest/
#
#     # ssh-agent
#     # http://sanrinsha.lolipop.jp/blog/2010/09/ssh%E9%96%A2%E9%80%A3.html
#     if [[ `uname` != CYGWIN* ]] && which ssh-agent 1>/dev/null 2>&1; then
#         SSH_AGENT_PID=$(ps x | grep ssh-agent 2>/dev/null | grep -v grep | head -1 | awk '{print $1}')
#         SSH_AUTH_SOCK=$(find /tmp/ssh-* -name agent.$(expr $SSH_AGENT_PID - 1 2>/dev/null) 2>/dev/null) # $agentPIDが空の時はexprのエラーが出るので/dev/nullに送る
#         if [ -z "$SSH_AGENT_PID" -o -z "$SSH_AUTH_SOCK" ]; then
#             unset SSH_AUTH_SOCK SSH_AGENT_PID
#             eval $(ssh-agent)
#             ssh-add
#         else
#             export SSH_AGENT_PID SSH_AUTH_SOCK
#             # 秘密鍵がセットされてなかったら追加
#             if ! ssh-add -l 1>/dev/null 2>&1 ; then
#                 ssh-add
#             fi
#         fi
#     fi
# fi

# .zashrc.cygwin {{{
if [[ `uname` = CYGWIN* && -f ~/.zashrc.cygwin ]]; then
    . ~/.zashrc.cygwin
fi
# }}}

# .zashrc.local {{{
if [ -f ~/.zashrc.local ]; then
    . ~/.zashrc.local
fi
# }}}
# vim:ft=zsh
