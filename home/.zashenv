##
# コマンドの存在チェック
# @see コマンドの存在チェックはwhichよりhashの方が良いかも→いやtypeが最強
#      http://qiita.com/kawaz/items/1b61ee2dd4d1acc7cc94
function command_exists {
  hash "$1" 2>/dev/null;
}
# PATHの設定 {{{
# ------------------------------------------------------------------------------
# CentOS 6.3の/etc/profileにあるPATHを追加する関数
pathmunge () {
    case ":${PATH}:" in
        *:"$1":*)
            ;;
        *)
            if [ "$2" = "after" ] ; then
                PATH=$PATH:$1
            else
                PATH=$1:$PATH
            fi
    esac
}

# 実行ファイルがあるディレクトリに再帰的にPATHを通す
pathmungeR () {
    if [ -d $1 ]; then
        for i in `find -L $1 -type d \( -name .git -o -name .svn -o -name .hg \) -prune -o -type f -perm -u+x -exec dirname {} \; | uniq`
        do
            pathmunge $i $2
        done
    fi
}

# シェルスクリプトなどを置くディレクトリ
pathmunge ${HOME}/bin
pathmungeR ${HOME}/script/common
# 正規のコマンドがないときに使う仮のコマンドを置くディレクトリ
pathmungeR $HOME/script/pseudo after
if [[ `uname` = CYGWIN* ]]; then
    # Cygwin用のコマンドを置くディレクトリ
    pathmungeR $HOME/script/cygwin
elif [[ $OSTYPE == darwin* ]]; then
    # Mac用のコマンドを置くディレクトリ
    pathmungeR $HOME/script/mac
    # All commands have been installed with the prefix 'g'.
    #
    # If you really need to use these commands with their normal names, you
    # can add a "gnubin" directory to your PATH from your bashrc like:
    #
    #     PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
    #
    # Additionally, you can access their man pages with normal names if you add
    # the "gnuman" directory to your MANPATH from your bashrc as well:
    #
    #     MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
fi

# makeで作った実行ファイルなどを置くディレクトリ
# MacVimで!でコマンド実行をするとPATHの先頭に /etc/pathsとMacVimのPATHを追加するようなので
# さらに先頭に$HOME/local/binを追加する
# pathmungeだと、すでにPATHにあるため追加できないのでexportで追加
export PATH=$HOME/local/bin:$PATH

# neobundleで管理するスクリプト
pathmungeR ~/.vim/fetchBundle

script_dir=$HOME/git/tmsanrinsha/dotfiles/script
# シェルスクリプトなどを置くディレクトリ
pathmungeR ${script_dir}/common
# 正規のコマンドがないときに使う仮のコマンドを置くディレクトリ
pathmungeR ${script_dir}/pseudo after
# Cygwin用のコマンドを置くディレクトリ
if [[ `uname` = CYGWIN* ]]; then
    pathmungeR ${script_dir}/cygwin
fi

# if [ -d ~/vim ];then
#     pathmunge ~/vim/`ls ~/vim | tail -n1`/bin
# fi

if [[ `uname` = Darwin ]]; then
    # ruby
    export PATH=/usr/local/opt/ruby/bin:$PATH
fi
# }}}
export SRC_ROOT=$HOME/.ghq
pathmunge $SRC_ROOT/github.com/tmsanrinsha/remote2local/bin
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF-8
export GOPATH=$HOME/.go
pathmunge $GOPATH/bin
# alias {{{
# ============================================================================
alias l='ls'
alias ll='ls -l'
# . ..以外の.で始まるファイルも表示
alias la='ls -A'
alias lla='ls -la'

alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias .......='cd ../../../../../..'

alias egrep='egrep --color=auto'
if [ `uname` = FreeBSD ];then
    alias find='find -E'
fi

alias pg='ps aux | grep -v grep | grep'
alias pe='ps aux | egrep'
alias pk='pkill -f'

# tree {{{
# ------------------------------------------------------------------------------
# -F:ディレクトリなら/をつけるなど
# -C:color
# -l:ディレクトリのシンボリックリンクを追う
alias tree='tree -FCl'
# }}}
# vim {{{
# ------------------------------------------------------------------------------
if [ -x /Applications/MacVim.app/Contents/MacOS/Vim ]; then
    alias vim=/Applications/MacVim.app/Contents/MacOS/Vim
fi

alias vi='vim'
alias vie='vim -R' #readonlyで開く。view
if [ -x $HOME/local/share/vim/vim73/macros/less.sh ]; then
    alias vl="$HOME/local/share/vim/vim73/macros/less.sh"
fi
alias vsh="vim -c 'VimShell'"
alias vf="vim -c 'VimFiler'"
# }}}
# git {{{
# ------------------------------------------------------------------------------
alias gal='alias | grep git'
alias ga='git add'
alias gb='git branch'
alias gci='git commit'
alias gco='git checkout'
alias gd='git diff'
alias gdn='git diff --no-ext-diff'
alias gdr='git diff remotes/origin/master'
alias gi='git init'
alias gl='git log --pretty=format:"%h %ad %s%d by %an" --graph --date=short -n 10'
alias gla='git log --pretty=format:"%h %ad %s%d by %an" --graph --date=short'
alias glv='git log | vim -R'
alias gm='git merge'
alias gpl='git pull'
alias gplr='git pull --rebase origin master'
alias gps='git push'
alias gmt='git mergetool'
alias grei='git rebase -i'
alias gre='git remote -v'
alias gs='git status'

# gitのルートディレクトリに移動
alias cdt='cd `git rev-parse --show-toplevel`'
# }}}

alias phpunit='phpunit --colors'

# svnとtreeの文字化け対策
alias lcc="export LC_CTYPE='C'"
# 日本語入力用
alias lcu="export LC_CTYPE='ja_JP.UTF-8'"

alias sr="exec $SHELL -l"

# カレントディレクトリ以下のファイルに書き込み権限を与える
alias smw='find . -type f -print0 | xargs -0 -I{} sudo chmod a+w {}'
# カレントディレクトリのファイル名をFull Pathで表示
alias fp='find `pwd` -maxdepth 1 -mindepth 1'
# ファイルを解凍するシェルスクリプト
alias dc='decomp.sh'
# find $1 type f -print0 | xargs -0 egrep --color=auto $2
alias fxg='fxg.sh'
# Linuxのバージョンを表示するコマンド
# http://blog.layer8.sh/ja/2011/12/23/linux%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%84os%E5%90%8D%E3%82%92%E8%AA%BF%E3%81%B9%E3%82%8B%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89linux/
alias linux='cat /etc/`ls /etc -F | grep "release$\|version$"`'

alias decode_html_entity='php -r '\''echo html_entity_decode($argv[1], ENT_NOQUOTES, "UTF-8")."\n";'\';
# }}}

if [ -f ~/.zashenv.local ]; then
    . ~/.zashenv.local
fi

# vim:filetype=sh
